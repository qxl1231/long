<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
	        			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
						http://www.springframework.org/schema/jee 
						http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/tx
                      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                      http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd"
       default-lazy-init="false">

    <description>Spring公共配置</description>
    <!--  后台异步请求RSS源的定时器
    <import resource="applicationContext-quartz-cron-local.xml" />
     -->
    <!-- 定义受环境影响易变的变量 -->
    <bean
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <!-- 标准配置 -->
                <value>classpath*:/application.properties</value>
                <!-- 集群中节点配置 -->
                <!--<value>classpath*:/application.cluster.properties</value>-->
                <!--&lt;!&ndash; 本地开发环境配置 &ndash;&gt;-->
                <!--<value>classpath*:/application.local.properties</value>-->
                <!-- 服务器生产环境配置 <value>file:/var/xpress/application.server.properties</value> -->
            </list>
        </property>
    </bean>

    <!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- Connection Pooling Info -->
        <property name="initialSize" value="10"/>
        <property name="maxIdle" value="${dbcp.maxIdle}"/>
        <property name="maxActive" value="${dbcp.maxActive}"/>
        <property name="validationQuery" value="select getdate()"/>
        <property name="testOnBorrow" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
        <property name="minEvictableIdleTimeMillis" value="3600000"/>
        <property name="removeAbandonedTimeout" value="120"/>
        <property name="removeAbandoned" value="true"/>
    </bean>

    <!-- 数据源配置,使用应用服务器的数据库连接池 -->
    <!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB"
    /> -->

    <!-- spring 事务配置 -->
    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <context:component-scan base-package="com.intel.store"/>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="txManager"/>
    <context:annotation-config/>

    <aop:config proxy-target-class="true"></aop:config>


    <!-- spring cache 配置 -->
    <!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->
    <cache:annotation-driven cache-manager="cacheManager"/>

    <!-- spring cache 基于 ehcache 的实现 -->
    <!-- cacheManager工厂类，指定ehcache.xml的位置 -->
    <!-- EhCache library setup -->
    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          p:configLocation="classpath:ehcache/ehcache.xml"/>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
          p:cacheManager-ref="ehcache"/>


    <!--  Spring 依赖注入配置信息        -->
    <!-- dao层配置 -->
    <bean id="toolsDao"
          class="com.intel.store.dao.ToolsDao">
        <property name="basicDataSource" ref="dataSource"/>
    </bean>
    <bean id="imageUploadDao"
          class="com.intel.store.dao.ImageUploadDao">
    </bean>
    <bean id="baseDao"
          class="com.intel.store.dao.BaseDao">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="awsProdDao"
          class="com.intel.store.dao.AwsProdDao">
    </bean>

    <!-- service层配置 -->
    <bean id="storeRspServiceImpl"
          class="com.intel.store.service.StoreRspServiceImpl">
        <property name="baseDao" ref="baseDao"/>
        <property name="storeService" ref="storeServiceImpl"/>
        <property name="ehcacheService" ref="ehcacheService"/>
    </bean>
    <bean id="loginServiceImpl"
          class="com.intel.store.service.LoginServiceImpl">
        <property name="toolsDao" ref="toolsDao"/>
        <property name="baseDao" ref="baseDao"/>
        <property name="storeService" ref="storeServiceImpl"/>
    </bean>

    <bean id="storeServiceImpl"
          class="com.intel.store.service.StoreServiceImpl">
        <property name="toolsDao" ref="toolsDao"/>
        <property name="baseDao" ref="baseDao"/>
        <property name="awsProdDao" ref="awsProdDao"/>
        <property name="imageUploadDao" ref="imageUploadDao"/>
    </bean>
    <bean id="vstStoreServiceImpl"
          class="com.intel.store.service.VstStoreServiceImpl">
        <property name="imageUploadDao" ref="imageUploadDao"/>
        <property name="baseDao" ref="baseDao"/>
    </bean>
    <bean id="activityServiceImpl"
          class="com.intel.store.service.ActivityServiceImpl">
        <property name="BaseDao" ref="baseDao"/>
    </bean>
    <bean id="storeLfrService"
          class="com.intel.store.service.StoreLfrServiceImpl">
        <property name="baseDao" ref="baseDao"/>
    </bean>

    <bean id="storeVsrService"
          class="com.intel.store.service.StoreVsrServiceImpl">
        <property name="baseDao" ref="baseDao"/>
    </bean>

    <bean id="ehcacheService"
          class="com.intel.store.service.EhcacheServiceImpl">
        <property name="baseDao" ref="baseDao"/>
    </bean>

    <!-- 定时器配置文件 -->
    <import resource="application-quartz.xml"/>

</beans>
