<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-lazy-init="false">

    <description>Quartz的本地Cron式执行任务配置</description>

    <!-- 被Cron执行的普通Spring Bean
    <bean id="vstStoreServiceImpl" class="com.intel.store.service.VstStoreServiceImpl" />
                     -->
    <!-- Quartz本地Schduler -->
    <bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
          lazy-init="false">
        <!-- Triggers集成 -->
        <property name="triggers">
            <list>
                <ref bean="pushDataTrigger"/>
                <ref bean="pushDataHalfHourTrigger"/>
            </list>
        </property>
        <!-- Quartz配置 -->
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.threadPool.threadCount">5</prop>
            </props>
        </property>
        <!-- 启动时延期3秒开始任务 -->
        <property name="startupDelay" value="3"/>
    </bean>

    <!-- 推送数据定时器 -->
    <bean id="pushDataTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="pushDataCronJobDetail"/>
        <!-- 每天9点执行一次 -->
        <property name="cronExpression" value="0 10 9 * * ?"/>
    </bean>
    <!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
    <bean id="pushDataCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="vstStoreServiceImpl"/>
        <property name="targetMethod" value="pushData"/>
        <!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
        <property name="concurrent" value="false"/>
    </bean>

    <!-- 每半小时推送数据定时器 -->
    <bean id="pushDataHalfHourTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="pushDataHalfHourCronJobDetail"/>
        <!-- 每30分钟执行一次 -->
        <property name="cronExpression" value="0 0/30 * * * ?"/>
    </bean>
    <!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
    <bean id="pushDataHalfHourCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="vstStoreServiceImpl"/>
        <property name="targetMethod" value="pushDataPerHaflHour"/>
        <!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
        <property name="concurrent" value="false"/>
    </bean>

</beans>
